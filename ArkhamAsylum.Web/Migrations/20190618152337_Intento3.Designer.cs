// <auto-generated />
using System;
using ArkhamAsylum.Lib.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArkhamAsylum.Web.Migrations
{
    [DbContext(typeof(ArkhamAsylumDbContext))]
    [Migration("20190618152337_Intento3")]
    partial class Intento3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Bed", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<Guid>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Beds");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Building", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Code");

                    b.HasKey("Id");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Diagnosis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<Guid>("DoctorId");

                    b.Property<Guid>("RecordId");

                    b.HasKey("Id");

                    b.HasIndex("DoctorId");

                    b.HasIndex("RecordId")
                        .IsUnique();

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Doctor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AreaId");

                    b.Property<string>("FirstSurname");

                    b.Property<string>("Name");

                    b.Property<string>("SecondSutname");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Doctors");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Floor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BuildingId");

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.ToTable("Floors");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Nurse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AreaId");

                    b.Property<string>("FirstSurname");

                    b.Property<string>("Name");

                    b.Property<string>("SecondSutname");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Nurses");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.NurseRoomAssignation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<Guid>("NurseId");

                    b.Property<Guid>("RoomId");

                    b.HasKey("Id");

                    b.HasIndex("NurseId");

                    b.HasIndex("RoomId");

                    b.ToTable("NurseRoomAssignations");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Patient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("FirstSurname");

                    b.Property<string>("Name");

                    b.Property<string>("SecondSutname");

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Record", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("BedId");

                    b.Property<string>("Code");

                    b.Property<Guid>("DiagnosisId");

                    b.Property<Guid>("PatientId");

                    b.HasKey("Id");

                    b.HasIndex("BedId");

                    b.HasIndex("PatientId");

                    b.ToTable("Records");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Room", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AreaId");

                    b.Property<Guid>("FloorId");

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("FloorId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Bed", b =>
                {
                    b.HasOne("ArkhamAsylum.Lib.Models.Room", "Room")
                        .WithMany("Beds")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Diagnosis", b =>
                {
                    b.HasOne("ArkhamAsylum.Lib.Models.Doctor", "Doctor")
                        .WithMany("Diagnoses")
                        .HasForeignKey("DoctorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArkhamAsylum.Lib.Models.Record", "Record")
                        .WithOne("Diagnosis")
                        .HasForeignKey("ArkhamAsylum.Lib.Models.Diagnosis", "RecordId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Doctor", b =>
                {
                    b.HasOne("ArkhamAsylum.Lib.Models.Area", "Area")
                        .WithMany("Doctors")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Floor", b =>
                {
                    b.HasOne("ArkhamAsylum.Lib.Models.Building", "Building")
                        .WithMany("Floors")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Nurse", b =>
                {
                    b.HasOne("ArkhamAsylum.Lib.Models.Area", "Area")
                        .WithMany("Nurses")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.NurseRoomAssignation", b =>
                {
                    b.HasOne("ArkhamAsylum.Lib.Models.Nurse", "Nurse")
                        .WithMany("NurseRoomAssignations")
                        .HasForeignKey("NurseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArkhamAsylum.Lib.Models.Room", "Rooms")
                        .WithMany("NurseRoomAssignations")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Record", b =>
                {
                    b.HasOne("ArkhamAsylum.Lib.Models.Bed", "Bed")
                        .WithMany()
                        .HasForeignKey("BedId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArkhamAsylum.Lib.Models.Patient", "Patient")
                        .WithMany("Records")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArkhamAsylum.Lib.Models.Room", b =>
                {
                    b.HasOne("ArkhamAsylum.Lib.Models.Area", "Area")
                        .WithMany()
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArkhamAsylum.Lib.Models.Floor", "Floor")
                        .WithMany("Rooms")
                        .HasForeignKey("FloorId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
